geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H2.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
#### not used below ####
## Fold changes based on HIF2A regulated speckle association for only shared HIF targets
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H1.10, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T) +
ylim(-2,0.5)
filename = "HIF1gRNA10foldChanges_splitByHIF2AregSpeckleAssoc.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
## Fold changes based on HIF2A regulated speckle association for only shared HIF targets
my_specific_comparisons <- list( c("yes","no"))
p = ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H1.10, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T) +
ylim(-2,0.5)
filename = "HIF1gRNA10foldChanges_splitByHIF2AregSpeckleAssoc.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
p = ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H1.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
filename = "HIF1gRNA2foldChanges_splitByHIF2AregSpeckleAssoc.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
p = ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H2.1, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
filename = "HIF2gRNA1foldChanges_splitByHIF2AregSpeckleAssoc.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
p = ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "both",], aes(x=SONdown, y=fc.H2.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.4, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
filename = "HIF2gRNA2foldChanges_splitByHIF2AregSpeckleAssoc.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
my_specific_comparisons <- list( c("1","5"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2A",], aes(x=speckleNtiles, y=fc.H2.2, fill=factor(speckleNtiles))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("1","5"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=speckleNtiles, y=fc.H2.2, fill=factor(speckleNtiles))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("1","5"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=speckleNtiles, y=fc.H2.1, fill=factor(speckleNtiles))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("1","5"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=speckleNtiles, y=fc.H1.10, fill=factor(speckleNtiles))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("1","5"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=speckleNtiles, y=fc.H1.2, fill=factor(speckleNtiles))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=SONdown, y=fc.H1.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,0.5)
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=SONdown, y=fc.H1.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,1)
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=SONdown, y=fc.H1.10, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,1)
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=SONdown, y=fc.H2.1, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,1)
my_specific_comparisons <- list( c("yes","no"))
ggplot(ssHIFtargs[ssHIFtargs$HIFtargetStatus == "HIF2",], aes(x=SONdown, y=fc.H2.2, fill=factor(SONdown))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_viridis(discrete = TRUE, alpha=0.7) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T)+
ylim(-2,1)
setwd("~/Desktop/Alexander2023_filesTooBigForGithub/speckleSignature/")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(stringr)
library(matrixStats)
dataDir = "/Users/kaalexa/gsea_home/output/jun30"
# prefix of the folders
prefix = "KEGG"
# cancer list
#CANCERS = c("KIRC", "SKCM", "BRCA")
#CANCERS = c("KIRC", "SKCM", "BRCA",  "LIHC", "PRAD")
CANCERS = c("KIRC", "SKCM", "BRCA", "BLCA", "CESC", "COAD", "ESCA", "HNSC", "KIRP", "LIHC", "PAAD", "PCPG", "PRAD", "SARC", "STAD", "THCA", "THYM", "UCEC")
# first cancer is KIRC
cancer = CANCERS[1]
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
MERGED <- rbind(neg,pos)
MERGED$CANCER <- "1KIRC"
# Assemble data
for (cancer in CANCERS[2:length(CANCERS)]){
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
CURRENT <- rbind(neg, pos)
CURRENT$CANCER <- cancer
MERGED <- rbind(MERGED, CURRENT)
}
MERGED$negLOGq <- -log10(MERGED$FDR.q.val)
MERGED$negLOGq[MERGED$negLOGq == "Inf"] <- 5
# Take terms significant in any cancer type
pTable <- MERGED %>% group_by(CANCER,NAME) %>% summarise(FDR.q.val) %>% pivot_wider(names_from = CANCER, values_from = FDR.q.val)
#toKeep <- pTable$NAME[rowMins(as.matrix(pTable[,2:length(pTable)])) < 0.005]
#Terms significant in KIRC
toKeep <- MERGED$NAME[MERGED$CANCER == "1KIRC" & MERGED$FDR.q.val < 0.05]
SUBSET <- MERGED[MERGED$NAME %in% toKeep,]
p = SUBSET%>%
ggplot(aes(x=CANCER,y=reorder(NAME, -NES))) +
geom_point(aes(size= negLOGq,color= NES) ) +
#next line add border
geom_point(aes(size= negLOGq),shape = 1,colour = "black") +
scale_color_gradient2(low = "#27495C", mid = "white", high = "#C66B3C", midpoint = 0)+
theme_classic() +
theme(
legend.position="top",
legend.title = element_text(face = "bold", size = 10),
legend.title.align = 2,
axis.title.y  = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12,colour = 'black', angle = 90),
axis.text.y = element_text(size = 12,colour = 'black'),
panel.border = element_rect(colour = "black", fill=NA, size=1)
) +
#if you want to change overall size of dot
scale_size_continuous(range = c(2, 7), breaks = seq(0, 5, by = 1), limits = c(0,5)) +
#reverse Y
scale_y_discrete(limits = rev)
filename = paste(prefix, "_dotplot.pdf", sep = "")
pdf(filename, width = 8.5, height = 5, onefile=FALSE)
print(p)
dev.off()
filename = paste(prefix, "_dotplot.pdf", sep = "")
pdf(filename, width = 9, height = 6, onefile=FALSE)
print(p)
dev.off()
setwd("~/Desktop/Alexander2023_filesTooBigForGithub/speckleSignature/")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(stringr)
library(matrixStats)
dataDir = "/Users/kaalexa/gsea_home/output/jun30"
# prefix of the folders
prefix = "KEGG"
# cancer list
#CANCERS = c("KIRC", "SKCM", "BRCA")
#CANCERS = c("KIRC", "SKCM", "BRCA",  "LIHC", "PRAD")
CANCERS = c("KIRC", "SKCM", "BRCA", "BLCA", "CESC", "COAD", "ESCA", "HNSC", "KIRP", "LIHC", "PAAD", "PCPG", "PRAD", "SARC", "STAD", "THCA", "THYM", "UCEC")
# first cancer is KIRC
cancer = CANCERS[1]
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
MERGED <- rbind(neg,pos)
MERGED$CANCER <- "1KIRC"
# Assemble data
for (cancer in CANCERS[2:length(CANCERS)]){
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
CURRENT <- rbind(neg, pos)
CURRENT$CANCER <- cancer
MERGED <- rbind(MERGED, CURRENT)
}
MERGED$negLOGq <- -log10(MERGED$FDR.q.val)
MERGED$negLOGq[MERGED$negLOGq == "Inf"] <- 5
# Take terms significant in any cancer type
pTable <- MERGED %>% group_by(CANCER,NAME) %>% summarise(FDR.q.val) %>% pivot_wider(names_from = CANCER, values_from = FDR.q.val)
#toKeep <- pTable$NAME[rowMins(as.matrix(pTable[,2:length(pTable)])) < 0.005]
#Terms significant in KIRC
toKeep <- MERGED$NAME[MERGED$CANCER == "1KIRC" & MERGED$FDR.q.val < 0.05]
SUBSET <- MERGED[MERGED$NAME %in% toKeep,]
p = SUBSET%>%
ggplot(aes(x=CANCER,y=reorder(NAME, -NES))) +
geom_point(aes(size= negLOGq,color= NES) ) +
#next line add border
geom_point(aes(size= negLOGq),shape = 1,colour = "black") +
scale_color_gradient2(low = "#27495C", mid = "white", high = "#C66B3C", midpoint = 0)+
theme_classic() +
theme(
legend.position="top",
legend.title = element_text(face = "bold", size = 10),
legend.title.align = 2,
axis.title.y  = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12,colour = 'black', angle = 90),
axis.text.y = element_text(size = 12,colour = 'black'),
panel.border = element_rect(colour = "black", fill=NA, size=1)
) +
#if you want to change overall size of dot
scale_size_continuous(range = c(1, 4), breaks = seq(0, 5, by = 1), limits = c(0,5)) +
#reverse Y
scale_y_discrete(limits = rev)
filename = paste(prefix, "_dotplot.pdf", sep = "")
pdf(filename, width = 9, height = 6, onefile=FALSE)
print(p)
dev.off()
setwd("~/Desktop/Alexander2023_filesTooBigForGithub/speckleSignature/")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(stringr)
library(matrixStats)
dataDir = "/Users/kaalexa/gsea_home/output/jun30"
# prefix of the folders
prefix = "KEGG"
# cancer list
#CANCERS = c("KIRC", "SKCM", "BRCA")
#CANCERS = c("KIRC", "SKCM", "BRCA",  "LIHC", "PRAD")
CANCERS = c("KIRC", "SKCM", "BRCA", "BLCA", "CESC", "COAD", "ESCA", "HNSC", "KIRP", "LIHC", "PAAD", "PCPG", "PRAD", "SARC", "STAD", "THCA", "THYM", "UCEC")
# first cancer is KIRC
cancer = CANCERS[1]
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
MERGED <- rbind(neg,pos)
MERGED$CANCER <- "1KIRC"
# Assemble data
for (cancer in CANCERS[2:length(CANCERS)]){
dir = paste(dataDir, "/", prefix, "_", cancer, ".GseaPreranked.", sep = "")
dir = list.dirs(path = dataDir, full.names = TRUE)[grep(dir, list.dirs(path = dataDir, full.names = TRUE))[1]]
negFile = list.files(path = dir, pattern = "gsea_report_for_na_neg_[0-9]+.tsv", full.names = TRUE)
posFile = list.files(path = dir, pattern = "gsea_report_for_na_pos_[0-9]+.tsv", full.names = TRUE)
neg <- read.table(negFile, sep = "\t", header=T)
pos <- read.table(posFile, sep = "\t", header=T)
CURRENT <- rbind(neg, pos)
CURRENT$CANCER <- cancer
MERGED <- rbind(MERGED, CURRENT)
}
MERGED$negLOGq <- -log10(MERGED$FDR.q.val)
MERGED$negLOGq[MERGED$negLOGq == "Inf"] <- 5
# Take terms significant in any cancer type
pTable <- MERGED %>% group_by(CANCER,NAME) %>% summarise(FDR.q.val) %>% pivot_wider(names_from = CANCER, values_from = FDR.q.val)
#toKeep <- pTable$NAME[rowMins(as.matrix(pTable[,2:length(pTable)])) < 0.005]
#Terms significant in KIRC
toKeep <- MERGED$NAME[MERGED$CANCER == "1KIRC" & MERGED$FDR.q.val < 0.05]
SUBSET <- MERGED[MERGED$NAME %in% toKeep,]
p = SUBSET%>%
ggplot(aes(x=CANCER,y=reorder(NAME, -NES))) +
geom_point(aes(size= negLOGq,color= NES) ) +
#next line add border
geom_point(aes(size= negLOGq),shape = 1,colour = "black") +
scale_color_gradient2(low = "#27495C", mid = "white", high = "#C66B3C", midpoint = 0)+
theme_classic() +
theme(
legend.position="top",
legend.title = element_text(face = "bold", size = 10),
legend.title.align = 2,
axis.title.y  = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12,colour = 'black', angle = 90),
axis.text.y = element_text(size = 12,colour = 'black'),
panel.border = element_rect(colour = "black", fill=NA, size=1)
) +
#if you want to change overall size of dot
scale_size_continuous(range = c(1, 4), breaks = seq(0, 5, by = 1), limits = c(0,5)) +
#reverse Y
scale_y_discrete(limits = rev)
filename = paste(prefix, "_dotplot.pdf", sep = "")
pdf(filename, width = 9, height = 5, onefile=FALSE)
print(p)
dev.off()
setwd("~/Documents/speckleSignature/Graph_individual_genes/")
library(EnhancedVolcano)
A <- read.table("medianGeneExpression_KIRC_specklepatientGroups.txt", header = T, row.names = 1)
A$log2Ratio <- log2(A$SigI/A$SigII)
published <- read.table("HIF2A_publishedSet.txt")
HIFresponsiveGenes <- read.table("HIF2Atargets_MCF7_786O_combined.txt")
B <- A[A$Gene %in% HIFresponsiveGenes$V1 | A$Gene %in% published$V1,]
## take only the HIF2A responsive genes that are increasing in both sig I and sig I over normals (but doesn't have to be significant)
B$IvsN <- log2(B$SigI/B$Normal)
B$IIvsN <- log2(B$SigII/B$Normal)
B <- B[(B$IvsN > 0.2 | B$IIvsN > 0.2),]
B <- B[B$pIvsN < 0.05 | B$pIIvsN < 0.05,]
# create custom key-value pairs for 'high', 'low', 'mid' expression by fold-change
# this can be achieved with nested ifelse statements
keyvals <- ifelse(
B$log2Ratio > 0 & B$pIvsII < 0.05, "#CB7245",
ifelse(B$log2Ratio < -0 & B$pIvsII < 0.05, "#27495C",
'grey83'))
keyvals[is.na(keyvals)] <- 'grey83'
names(keyvals)[keyvals == '#CB7245'] <- 'Up in Sig I'
names(keyvals)[keyvals == 'grey83'] <- 'n.s.'
names(keyvals)[keyvals == '#27495C'] <- 'Up in Sig II'
View(B)
setwd("~/Documents/dataIntegration-Alexander2023/STMmutants/")
library(ggplot2)
library(viridis)
library(dplyr)
library(ggpubr)
A <- read.table("foldChangesFormattedForPlot.txt", header=T, row.names = "Gene")
## get rid of low count genes
A <- A[A$baseMean > 300,]
A$log2Ratio <- log2(A$SigI/A$SigII)
A$signatureDeciles <- ntile(A$log2Ratio, 5)
A$signatureDeciles <- as.factor(A$signatureDeciles)
A$speckleDeciles <- ntile((A$SONdmso1 + A$SONdmso2)/2, 5)
A$speckleDeciles <- as.factor(A$speckleDeciles)
View(A)
setwd("~/Documents/dataIntegration-Alexander2023/STMmutants/")
library(ggplot2)
library(viridis)
library(dplyr)
library(ggpubr)
A <- read.table("foldChangesFormattedForPlot.txt", header=T, row.names = "Gene")
## get rid of low count genes
A <- A[A$baseMean > 300,]
A$log2Ratio <- log2(A$SigI/A$SigII)
A$signatureDeciles <- ntile(A$log2Ratio, 5)
A$signatureDeciles <- as.factor(A$signatureDeciles)
A$speckleDeciles <- ntile((A$SONdmso1 + A$SONdmso2)/2, 5)
A$speckleDeciles <- as.factor(A$speckleDeciles)
my_specific_comparisons <- list( c("1","5"))
A$DPM_1A2A <- factor(A$DPM_1A2A, levels = c("dpm", "ns", "1a2a"))
my_specific_comparisons <- list( c("dpm", "ns"), c("ns", "1a2a"))
ggplot(A[A$DPMup == "Yes" | A$X1A2Aup == "Yes",], aes(x=DPM_1A2A, y=log2Ratio, fill=factor(DPM_1A2A))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_manual(values = c("#E0B170", "grey","#878DC1")) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T, ) +
ylim(-2,2)
## speckle signature ratio based on bias
A$DPM_1A2A <- factor(A$DPM_1A2A, levels = c("dpm", "ns", "1a2a"))
my_specific_comparisons <- list( c("dpm", "ns"), c("ns", "1a2a"))
p = ggplot(A[A$DPMup == "Yes" | A$X1A2Aup == "Yes",], aes(x=DPM_1A2A, y=log2Ratio, fill=factor(DPM_1A2A))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_manual(values = c("#E0B170", "grey","#878DC1")) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T, ) +
ylim(-2,2)
filename = "HIFtargets_MCFbias_signatureRatio.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
setwd("~/Documents/dataIntegration-Alexander2023/STMmutants/")
library(ggplot2)
library(viridis)
library(dplyr)
library(ggpubr)
A <- read.table("foldChangesFormattedForPlot.txt", header=T, row.names = "Gene")
## get rid of low count genes
A <- A[A$baseMean > 300,]
A$log2Ratio <- log2(A$SigI/A$SigII)
A$signatureDeciles <- ntile(A$log2Ratio, 5)
A$signatureDeciles <- as.factor(A$signatureDeciles)
A$speckleDeciles <- ntile((A$SONdmso1 + A$SONdmso2)/2, 5)
A$speckleDeciles <- as.factor(A$speckleDeciles)
## speckle signature ratio based on bias
A$DPM_1A2A <- factor(A$DPM_1A2A, levels = c("dpm", "ns", "1a2a"))
my_specific_comparisons <- list( c("dpm", "ns"), c("ns", "1a2a"))
p = ggplot(A[A$DPMup == "Yes" | A$X1A2Aup == "Yes",], aes(x=DPM_1A2A, y=log2Ratio, fill=factor(DPM_1A2A))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_manual(values = c("#E0B170", "grey","#878DC1")) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T, ) +
ylim(-2,2)
filename = "HIFtargets_MCFbias_signatureRatio.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
setwd("~/Documents/dataIntegration-Alexander2023/STMmutants/")
library(ggplot2)
library(viridis)
library(dplyr)
library(ggpubr)
A <- read.table("foldChangesFormattedForPlot.txt", header=T, row.names = "Gene")
## get rid of low count genes
A <- A[A$baseMean > 300,]
A$log2Ratio <- log2(A$SigI/A$SigII)
A$signatureDeciles <- ntile(A$log2Ratio, 5)
A$signatureDeciles <- as.factor(A$signatureDeciles)
A$speckleDeciles <- ntile((A$SONdmso1 + A$SONdmso2)/2, 5)
A$speckleDeciles <- as.factor(A$speckleDeciles)
## speckle signature ratio based on bias
A$DPM_1A2A <- factor(A$DPM_1A2A, levels = c("dpm", "ns", "1a2a"))
my_specific_comparisons <- list( c("dpm", "ns"), c("ns", "1a2a"))
p = ggplot(A[A$DPMup == "Yes" | A$X1A2Aup == "Yes",], aes(x=DPM_1A2A, y=log2Ratio, fill=factor(DPM_1A2A))) +
geom_boxplot(col="black", size=1, outlier.size = 0) +
geom_jitter(color="grey20", size=.1, alpha= .5) +
theme_classic() +
scale_fill_manual(values = c("#E0B170", "grey","#878DC1")) +
theme(legend.position="none") +
stat_compare_means(comparisons = my_specific_comparisons, method = "wilcox.test", size = 4, tip.length = 0.015, step.increase = 0.08, label = "p.signif", vjust = .6, hide.ns = T, ) +
ylim(-2,2)
filename = "HIFtargets_MCFbias_signatureRatio.pdf"
pdf(filename, width = 2, height = 2.75, onefile=FALSE)
print(p)
dev.off()
